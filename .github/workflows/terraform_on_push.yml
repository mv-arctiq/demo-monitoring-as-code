name: 'Terraform: deploy'
on:
  push:
    branches:
      - main
    paths:
      - '**.tf'

jobs:
  terraform-plan:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        environment: ['stage', 'production']
    steps:
      - name: Fetch repository
        uses: actions/checkout@v3

      - name: Configure required access
        uses: ./.github/actions/setup-creds
        with:
          github: ${{ secrets.GH_TOKEN }}
          gcloud: ${{ secrets.GCS_JSON }}

      - name: Terraform plan
        uses: ArctiqTeam/action-terraform@main
        with:
          directory: terraform/${{ matrix.environment }}
          tf_version: 1.4.6
          tf_init: true
          tf_lint: true
          tf_plan: true
        env:
          DYNATRACE_ENV_URL: ${{ secrets[format('DYNATRACE_{0}_ENV_URL', matrix.environment)] }}
          DYNATRACE_API_TOKEN: ${{ secrets[format('DYNATRACE_{0}_API_TOKEN', matrix.environment)] }}

  terraform-apply:
    runs-on: ubuntu-latest
    needs: terraform-plan
    strategy:
      fail-fast: false
      matrix:
        environment: ['stage', 'production']
    environment:
      name: ${{ matrix.environment }}
    steps:
      - name: Fetch repository
        uses: actions/checkout@v3

      - name: Configure required access
        uses: ./.github/actions/setup-creds
        with:
          github: ${{ secrets.GH_TOKEN }}
          gcloud: ${{ secrets.GCS_JSON }}

      - name: Terraform apply
        uses: ArctiqTeam/action-terraform@main
        with:
          directory: terraform/${{ matrix.environment }}
          tf_version: 1.4.6
          tf_init: true
          tf_apply: true
        env:
          DYNATRACE_ENV_URL: ${{ secrets[format('DYNATRACE_{0}_ENV_URL', matrix.environment)] }}
          DYNATRACE_API_TOKEN: ${{ secrets[format('DYNATRACE_{0}_API_TOKEN', matrix.environment)] }}
